<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1" />
<title>BaselineReport xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../stylesheet.css" />
</head>
<body>
<pre>

<a name="1" href="#1">1</a>   <em class="jxr_comment">/*</em>
<a name="2" href="#2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one</em>
<a name="3" href="#3">3</a>   <em class="jxr_comment"> * or more contributor license agreements.  See the NOTICE file</em>
<a name="4" href="#4">4</a>   <em class="jxr_comment"> * distributed with this work for additional information</em>
<a name="5" href="#5">5</a>   <em class="jxr_comment"> * regarding copyright ownership.  The ASF licenses this file</em>
<a name="6" href="#6">6</a>   <em class="jxr_comment"> * to you under the Apache License, Version 2.0 (the</em>
<a name="7" href="#7">7</a>   <em class="jxr_comment"> * "License"); you may not use this file except in compliance</em>
<a name="8" href="#8">8</a>   <em class="jxr_comment"> * with the License.  You may obtain a copy of the License at</em>
<a name="9" href="#9">9</a>   <em class="jxr_comment"> *</em>
<a name="10" href="#10">10</a>  <em class="jxr_comment"> *   <a href="http://www.apache.org/licenses/LICENSE-2.0" target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.0</a></em>
<a name="11" href="#11">11</a>  <em class="jxr_comment"> *</em>
<a name="12" href="#12">12</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing,</em>
<a name="13" href="#13">13</a>  <em class="jxr_comment"> * software distributed under the License is distributed on an</em>
<a name="14" href="#14">14</a>  <em class="jxr_comment"> * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</em>
<a name="15" href="#15">15</a>  <em class="jxr_comment"> * KIND, either express or implied.  See the License for the</em>
<a name="16" href="#16">16</a>  <em class="jxr_comment"> * specific language governing permissions and limitations</em>
<a name="17" href="#17">17</a>  <em class="jxr_comment"> * under the License.</em>
<a name="18" href="#18">18</a>  <em class="jxr_comment"> */</em>
<a name="19" href="#19">19</a>  <strong class="jxr_keyword">package</strong> org.apache.felix.bundleplugin.baseline;
<a name="20" href="#20">20</a>  
<a name="21" href="#21">21</a>  <strong class="jxr_keyword">import</strong> java.io.File;
<a name="22" href="#22">22</a>  <strong class="jxr_keyword">import</strong> java.io.FileOutputStream;
<a name="23" href="#23">23</a>  <strong class="jxr_keyword">import</strong> java.io.IOException;
<a name="24" href="#24">24</a>  <strong class="jxr_keyword">import</strong> java.io.InputStream;
<a name="25" href="#25">25</a>  <strong class="jxr_keyword">import</strong> java.io.OutputStream;
<a name="26" href="#26">26</a>  <strong class="jxr_keyword">import</strong> java.util.Locale;
<a name="27" href="#27">27</a>  <strong class="jxr_keyword">import</strong> java.util.Map;
<a name="28" href="#28">28</a>  <strong class="jxr_keyword">import</strong> java.util.ResourceBundle;
<a name="29" href="#29">29</a>  
<a name="30" href="#30">30</a>  <strong class="jxr_keyword">import</strong> org.apache.maven.doxia.sink.Sink;
<a name="31" href="#31">31</a>  <strong class="jxr_keyword">import</strong> org.apache.maven.reporting.MavenReport;
<a name="32" href="#32">32</a>  <strong class="jxr_keyword">import</strong> org.apache.maven.reporting.MavenReportException;
<a name="33" href="#33">33</a>  <strong class="jxr_keyword">import</strong> org.codehaus.plexus.util.IOUtil;
<a name="34" href="#34">34</a>  
<a name="35" href="#35">35</a>  <em class="jxr_javadoccomment">/**</em>
<a name="36" href="#36">36</a>  <em class="jxr_javadoccomment"> * BND Baseline report.</em>
<a name="37" href="#37">37</a>  <em class="jxr_javadoccomment"> *</em>
<a name="38" href="#38">38</a>  <em class="jxr_javadoccomment"> * @goal baseline-report</em>
<a name="39" href="#39">39</a>  <em class="jxr_javadoccomment"> * @phase site</em>
<a name="40" href="#40">40</a>  <em class="jxr_javadoccomment"> * @threadSafe true</em>
<a name="41" href="#41">41</a>  <em class="jxr_javadoccomment"> * @since 2.4.1</em>
<a name="42" href="#42">42</a>  <em class="jxr_javadoccomment"> */</em>
<a name="43" href="#43">43</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../../org/apache/felix/bundleplugin/baseline/BaselineReport.html">BaselineReport</a>
<a name="44" href="#44">44</a>      <strong class="jxr_keyword">extends</strong> <a href="../../../../../org/apache/felix/bundleplugin/baseline/AbstractBaselinePlugin.html">AbstractBaselinePlugin</a>
<a name="45" href="#45">45</a>      implements MavenReport
<a name="46" href="#46">46</a>  {
<a name="47" href="#47">47</a>  
<a name="48" href="#48">48</a>      <em class="jxr_javadoccomment">/**</em>
<a name="49" href="#49">49</a>  <em class="jxr_javadoccomment">     * Specifies the directory where the report will be generated.</em>
<a name="50" href="#50">50</a>  <em class="jxr_javadoccomment">     *</em>
<a name="51" href="#51">51</a>  <em class="jxr_javadoccomment">     * @parameter default-value="${project.reporting.outputDirectory}"</em>
<a name="52" href="#52">52</a>  <em class="jxr_javadoccomment">     * @required</em>
<a name="53" href="#53">53</a>  <em class="jxr_javadoccomment">     */</em>
<a name="54" href="#54">54</a>      <strong class="jxr_keyword">private</strong> File outputDirectory;
<a name="55" href="#55">55</a>  
<a name="56" href="#56">56</a>      <strong class="jxr_keyword">private</strong> Sink sink;
<a name="57" href="#57">57</a>  
<a name="58" href="#58">58</a>      <strong class="jxr_keyword">private</strong> Locale locale;
<a name="59" href="#59">59</a>  
<a name="60" href="#60">60</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">int</strong> currentDepth = 0;
<a name="61" href="#61">61</a>  
<a name="62" href="#62">62</a>      <em class="jxr_comment">// AbstractBaselinePlugin events</em>
<a name="63" href="#63">63</a>  
<a name="64" href="#64">64</a>      @Override
<a name="65" href="#65">65</a>      <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> init()
<a name="66" href="#66">66</a>      {
<a name="67" href="#67">67</a>          failOnError = false;
<a name="68" href="#68">68</a>          failOnWarning = false;
<a name="69" href="#69">69</a>  
<a name="70" href="#70">70</a>          <strong class="jxr_keyword">final</strong> File baselineImagesDirectory = <strong class="jxr_keyword">new</strong> File( outputDirectory, <span class="jxr_string">"images/baseline"</span> );
<a name="71" href="#71">71</a>          baselineImagesDirectory.mkdirs();
<a name="72" href="#72">72</a>  
<a name="73" href="#73">73</a>          <strong class="jxr_keyword">for</strong> ( String resourceName : <strong class="jxr_keyword">new</strong> String[]{ <span class="jxr_string">"access.gif"</span>,
<a name="74" href="#74">74</a>                                                    <span class="jxr_string">"annotated.gif"</span>,
<a name="75" href="#75">75</a>                                                    <span class="jxr_string">"annotation.gif"</span>,
<a name="76" href="#76">76</a>                                                    <span class="jxr_string">"bundle.gif"</span>,
<a name="77" href="#77">77</a>                                                    <span class="jxr_string">"class.gif"</span>,
<a name="78" href="#78">78</a>                                                    <span class="jxr_string">"constant.gif"</span>,
<a name="79" href="#79">79</a>                                                    <span class="jxr_string">"enum.gif"</span>,
<a name="80" href="#80">80</a>                                                    <span class="jxr_string">"error.gif"</span>,
<a name="81" href="#81">81</a>                                                    <span class="jxr_string">"extends.gif"</span>,
<a name="82" href="#82">82</a>                                                    <span class="jxr_string">"field.gif"</span>,
<a name="83" href="#83">83</a>                                                    <span class="jxr_string">"implements.gif"</span>,
<a name="84" href="#84">84</a>                                                    <span class="jxr_string">"info.gif"</span>,
<a name="85" href="#85">85</a>                                                    <span class="jxr_string">"interface.gif"</span>,
<a name="86" href="#86">86</a>                                                    <span class="jxr_string">"method.gif"</span>,
<a name="87" href="#87">87</a>                                                    <span class="jxr_string">"package.gif"</span>,
<a name="88" href="#88">88</a>                                                    <span class="jxr_string">"resource.gif"</span>,
<a name="89" href="#89">89</a>                                                    <span class="jxr_string">"return.gif"</span>,
<a name="90" href="#90">90</a>                                                    <span class="jxr_string">"version.gif"</span>,
<a name="91" href="#91">91</a>                                                    <span class="jxr_string">"warning.gif"</span> } )
<a name="92" href="#92">92</a>          {
<a name="93" href="#93">93</a>              InputStream source = getClass().getResourceAsStream( resourceName );
<a name="94" href="#94">94</a>              OutputStream target = <strong class="jxr_keyword">null</strong>;
<a name="95" href="#95">95</a>              File targetFile = <strong class="jxr_keyword">new</strong> File( baselineImagesDirectory, resourceName );
<a name="96" href="#96">96</a>  
<a name="97" href="#97">97</a>              <strong class="jxr_keyword">try</strong>
<a name="98" href="#98">98</a>              {
<a name="99" href="#99">99</a>                  target = <strong class="jxr_keyword">new</strong> FileOutputStream( targetFile );
<a name="100" href="#100">100</a>                 IOUtil.copy( source, target );
<a name="101" href="#101">101</a>             }
<a name="102" href="#102">102</a>             <strong class="jxr_keyword">catch</strong> ( IOException e )
<a name="103" href="#103">103</a>             {
<a name="104" href="#104">104</a>                 getLog().warn( <span class="jxr_string">"Impossible to copy "</span> + resourceName + <span class="jxr_string">" image, maybe the site won't be properly rendered."</span> );
<a name="105" href="#105">105</a>             }
<a name="106" href="#106">106</a>             <strong class="jxr_keyword">finally</strong>
<a name="107" href="#107">107</a>             {
<a name="108" href="#108">108</a>                 IOUtil.close( source );
<a name="109" href="#109">109</a>                 IOUtil.close( target );
<a name="110" href="#110">110</a>             }
<a name="111" href="#111">111</a>         }
<a name="112" href="#112">112</a>     }
<a name="113" href="#113">113</a> 
<a name="114" href="#114">114</a>     <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> startBaseline( String generationDate, String bundleName, String currentVersion, String previousVersion )
<a name="115" href="#115">115</a>     {
<a name="116" href="#116">116</a>         sink.head();
<a name="117" href="#117">117</a>         sink.title();
<a name="118" href="#118">118</a> 
<a name="119" href="#119">119</a>         String title = getBundle( locale ).getString( <span class="jxr_string">"report.baseline.title"</span> );
<a name="120" href="#120">120</a>         sink.text( title );
<a name="121" href="#121">121</a>         sink.title_();
<a name="122" href="#122">122</a>         sink.head_();
<a name="123" href="#123">123</a> 
<a name="124" href="#124">124</a>         sink.body();
<a name="125" href="#125">125</a> 
<a name="126" href="#126">126</a>         sink.section1();
<a name="127" href="#127">127</a>         sink.sectionTitle1();
<a name="128" href="#128">128</a>         sink.text( title );
<a name="129" href="#129">129</a>         sink.sectionTitle1_();
<a name="130" href="#130">130</a> 
<a name="131" href="#131">131</a>         sink.paragraph();
<a name="132" href="#132">132</a>         sink.text( getBundle( locale ).getString( <span class="jxr_string">"report.baseline.bndlink"</span> ) + <span class="jxr_string">" "</span> );
<a name="133" href="#133">133</a>         sink.link( <span class="jxr_string">"http://www.aqute.biz/Bnd/Bnd"</span> );
<a name="134" href="#134">134</a>         sink.text( <span class="jxr_string">"Bnd"</span> );
<a name="135" href="#135">135</a>         sink.link_();
<a name="136" href="#136">136</a>         sink.text( <span class="jxr_string">"."</span> );
<a name="137" href="#137">137</a>         sink.paragraph_();
<a name="138" href="#138">138</a> 
<a name="139" href="#139">139</a>         sink.paragraph();
<a name="140" href="#140">140</a>         sink.text( getBundle( locale ).getString( <span class="jxr_string">"report.baseline.bundle"</span> ) + <span class="jxr_string">" "</span> );
<a name="141" href="#141">141</a>         sink.figure();
<a name="142" href="#142">142</a>         sink.figureGraphics( <span class="jxr_string">"images/baseline/bundle.gif"</span> );
<a name="143" href="#143">143</a>         sink.figure_();
<a name="144" href="#144">144</a>         sink.text( <span class="jxr_string">" "</span> );
<a name="145" href="#145">145</a>         sink.bold();
<a name="146" href="#146">146</a>         sink.text( bundleName );
<a name="147" href="#147">147</a>         sink.bold_();
<a name="148" href="#148">148</a>         sink.listItem_();
<a name="149" href="#149">149</a> 
<a name="150" href="#150">150</a>         sink.paragraph();
<a name="151" href="#151">151</a>         sink.text( getBundle( locale ).getString( <span class="jxr_string">"report.baseline.version.current"</span> ) + <span class="jxr_string">" "</span> );
<a name="152" href="#152">152</a>         sink.bold();
<a name="153" href="#153">153</a>         sink.text( currentVersion );
<a name="154" href="#154">154</a>         sink.bold_();
<a name="155" href="#155">155</a>         sink.paragraph_();
<a name="156" href="#156">156</a> 
<a name="157" href="#157">157</a>         sink.paragraph();
<a name="158" href="#158">158</a>         sink.text( getBundle( locale ).getString( <span class="jxr_string">"report.baseline.version.comparison"</span> ) + <span class="jxr_string">" "</span> );
<a name="159" href="#159">159</a>         sink.bold();
<a name="160" href="#160">160</a>         sink.text( comparisonVersion );
<a name="161" href="#161">161</a>         sink.bold_();
<a name="162" href="#162">162</a>         sink.paragraph_();
<a name="163" href="#163">163</a> 
<a name="164" href="#164">164</a>         sink.paragraph();
<a name="165" href="#165">165</a>         sink.text( getBundle( locale ).getString( <span class="jxr_string">"report.baseline.generationdate"</span> ) + <span class="jxr_string">" "</span> );
<a name="166" href="#166">166</a>         sink.bold();
<a name="167" href="#167">167</a>         sink.text( generationDate );
<a name="168" href="#168">168</a>         sink.bold_();
<a name="169" href="#169">169</a>         sink.paragraph_();
<a name="170" href="#170">170</a> 
<a name="171" href="#171">171</a>         sink.section1_();
<a name="172" href="#172">172</a>     }
<a name="173" href="#173">173</a> 
<a name="174" href="#174">174</a>     <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> startPackage( <strong class="jxr_keyword">boolean</strong> mismatch,
<a name="175" href="#175">175</a>                                  String packageName,
<a name="176" href="#176">176</a>                                  String shortDelta,
<a name="177" href="#177">177</a>                                  String delta,
<a name="178" href="#178">178</a>                                  String newerVersion,
<a name="179" href="#179">179</a>                                  String olderVersion,
<a name="180" href="#180">180</a>                                  String suggestedVersion,
<a name="181" href="#181">181</a>                                  <a href="../../../../../org/apache/felix/bundleplugin/baseline/DiffMessage.html">DiffMessage</a> diffMessage,
<a name="182" href="#182">182</a>                                  Map&lt;String,String&gt; attributes )
<a name="183" href="#183">183</a>     {
<a name="184" href="#184">184</a>         sink.list();
<a name="185" href="#185">185</a> 
<a name="186" href="#186">186</a>         sink.listItem();
<a name="187" href="#187">187</a> 
<a name="188" href="#188">188</a>         sink.figure();
<a name="189" href="#189">189</a>         sink.figureGraphics( <span class="jxr_string">"./images/baseline/package.gif"</span> );
<a name="190" href="#190">190</a>         sink.figure_();
<a name="191" href="#191">191</a>         sink.text( <span class="jxr_string">" "</span> );
<a name="192" href="#192">192</a>         sink.monospaced();
<a name="193" href="#193">193</a>         sink.text( packageName );
<a name="194" href="#194">194</a>         sink.monospaced_();
<a name="195" href="#195">195</a> 
<a name="196" href="#196">196</a>         <strong class="jxr_keyword">if</strong> ( diffMessage != <strong class="jxr_keyword">null</strong> )
<a name="197" href="#197">197</a>         {
<a name="198" href="#198">198</a>             sink.text( <span class="jxr_string">" "</span> );
<a name="199" href="#199">199</a>             sink.figure();
<a name="200" href="#200">200</a>             sink.figureGraphics( <span class="jxr_string">"./images/baseline/"</span> + diffMessage.getType().name() + <span class="jxr_string">".gif"</span> );
<a name="201" href="#201">201</a>             sink.figure_();
<a name="202" href="#202">202</a>             sink.text( <span class="jxr_string">" "</span> );
<a name="203" href="#203">203</a>             sink.italic();
<a name="204" href="#204">204</a>             sink.text( diffMessage.getMessage() );
<a name="205" href="#205">205</a>             sink.italic_();
<a name="206" href="#206">206</a>             sink.text( <span class="jxr_string">" (newer version: "</span> );
<a name="207" href="#207">207</a>             sink.monospaced();
<a name="208" href="#208">208</a>             sink.text( newerVersion );
<a name="209" href="#209">209</a>             sink.monospaced_();
<a name="210" href="#210">210</a>             sink.text( <span class="jxr_string">", older version: "</span> );
<a name="211" href="#211">211</a>             sink.monospaced();
<a name="212" href="#212">212</a>             sink.text( olderVersion );
<a name="213" href="#213">213</a>             sink.monospaced_();
<a name="214" href="#214">214</a>             sink.text( <span class="jxr_string">", suggested version: "</span> );
<a name="215" href="#215">215</a>             sink.monospaced();
<a name="216" href="#216">216</a>             sink.text( suggestedVersion );
<a name="217" href="#217">217</a>             sink.monospaced_();
<a name="218" href="#218">218</a>             sink.text( <span class="jxr_string">")"</span> );
<a name="219" href="#219">219</a>         }
<a name="220" href="#220">220</a>     }
<a name="221" href="#221">221</a> 
<a name="222" href="#222">222</a>     <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> startDiff( <strong class="jxr_keyword">int</strong> depth,
<a name="223" href="#223">223</a>                               String type,
<a name="224" href="#224">224</a>                               String name,
<a name="225" href="#225">225</a>                               String delta,
<a name="226" href="#226">226</a>                               String shortDelta )
<a name="227" href="#227">227</a>     {
<a name="228" href="#228">228</a>         <strong class="jxr_keyword">if</strong> ( currentDepth &lt; depth )
<a name="229" href="#229">229</a>         {
<a name="230" href="#230">230</a>             sink.list();
<a name="231" href="#231">231</a>         }
<a name="232" href="#232">232</a> 
<a name="233" href="#233">233</a>         currentDepth = depth;
<a name="234" href="#234">234</a> 
<a name="235" href="#235">235</a>         sink.listItem();
<a name="236" href="#236">236</a>         sink.figure();
<a name="237" href="#237">237</a>         sink.figureGraphics( <span class="jxr_string">"images/baseline/"</span> + type + <span class="jxr_string">".gif"</span> );
<a name="238" href="#238">238</a>         sink.figure_();
<a name="239" href="#239">239</a>         sink.text( <span class="jxr_string">" "</span> );
<a name="240" href="#240">240</a> 
<a name="241" href="#241">241</a>         sink.monospaced();
<a name="242" href="#242">242</a>         sink.text( name );
<a name="243" href="#243">243</a>         sink.monospaced_();
<a name="244" href="#244">244</a> 
<a name="245" href="#245">245</a>         sink.text( <span class="jxr_string">" "</span> );
<a name="246" href="#246">246</a> 
<a name="247" href="#247">247</a>         sink.italic();
<a name="248" href="#248">248</a>         sink.text( delta );
<a name="249" href="#249">249</a>         sink.italic_();
<a name="250" href="#250">250</a>     }
<a name="251" href="#251">251</a> 
<a name="252" href="#252">252</a>     <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> endDiff( <strong class="jxr_keyword">int</strong> depth )
<a name="253" href="#253">253</a>     {
<a name="254" href="#254">254</a>         sink.listItem_();
<a name="255" href="#255">255</a> 
<a name="256" href="#256">256</a>         <strong class="jxr_keyword">if</strong> ( currentDepth &gt; depth )
<a name="257" href="#257">257</a>         {
<a name="258" href="#258">258</a>             sink.list_();
<a name="259" href="#259">259</a>         }
<a name="260" href="#260">260</a> 
<a name="261" href="#261">261</a>         currentDepth = depth;
<a name="262" href="#262">262</a>     }
<a name="263" href="#263">263</a> 
<a name="264" href="#264">264</a>     <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> endPackage()
<a name="265" href="#265">265</a>     {
<a name="266" href="#266">266</a>         <strong class="jxr_keyword">if</strong> ( currentDepth &gt; 0 )
<a name="267" href="#267">267</a>         {
<a name="268" href="#268">268</a>             sink.list_();
<a name="269" href="#269">269</a>             currentDepth = 0;
<a name="270" href="#270">270</a>         }
<a name="271" href="#271">271</a> 
<a name="272" href="#272">272</a>         sink.listItem_();
<a name="273" href="#273">273</a>         sink.list_();
<a name="274" href="#274">274</a>     }
<a name="275" href="#275">275</a> 
<a name="276" href="#276">276</a>     <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">void</strong> endBaseline()
<a name="277" href="#277">277</a>     {
<a name="278" href="#278">278</a>         sink.body_();
<a name="279" href="#279">279</a>         sink.flush();
<a name="280" href="#280">280</a>         sink.close();
<a name="281" href="#281">281</a>     }
<a name="282" href="#282">282</a> 
<a name="283" href="#283">283</a>     <em class="jxr_comment">// MavenReport methods</em>
<a name="284" href="#284">284</a> 
<a name="285" href="#285">285</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> canGenerateReport()
<a name="286" href="#286">286</a>     {
<a name="287" href="#287">287</a>         <strong class="jxr_keyword">return</strong> !skip &amp;&amp; outputDirectory != <strong class="jxr_keyword">null</strong>;
<a name="288" href="#288">288</a>     }
<a name="289" href="#289">289</a> 
<a name="290" href="#290">290</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> generate( @SuppressWarnings( <span class="jxr_string">"deprecation"</span> ) org.codehaus.doxia.sink.Sink sink, Locale locale )
<a name="291" href="#291">291</a>         <strong class="jxr_keyword">throws</strong> MavenReportException
<a name="292" href="#292">292</a>     {
<a name="293" href="#293">293</a>         <strong class="jxr_keyword">this</strong>.sink = sink;
<a name="294" href="#294">294</a>         <strong class="jxr_keyword">this</strong>.locale = locale;
<a name="295" href="#295">295</a> 
<a name="296" href="#296">296</a>         <strong class="jxr_keyword">try</strong>
<a name="297" href="#297">297</a>         {
<a name="298" href="#298">298</a>             execute();
<a name="299" href="#299">299</a>         }
<a name="300" href="#300">300</a>         <strong class="jxr_keyword">catch</strong> ( Exception e )
<a name="301" href="#301">301</a>         {
<a name="302" href="#302">302</a>             getLog().warn( <span class="jxr_string">"An error occurred while producing the report page, see nested exceptions"</span>, e );
<a name="303" href="#303">303</a>         }
<a name="304" href="#304">304</a>     }
<a name="305" href="#305">305</a> 
<a name="306" href="#306">306</a>     <strong class="jxr_keyword">public</strong> String getCategoryName()
<a name="307" href="#307">307</a>     {
<a name="308" href="#308">308</a>         <strong class="jxr_keyword">return</strong> MavenReport.CATEGORY_PROJECT_REPORTS;
<a name="309" href="#309">309</a>     }
<a name="310" href="#310">310</a> 
<a name="311" href="#311">311</a>     <strong class="jxr_keyword">public</strong> String getDescription( Locale locale )
<a name="312" href="#312">312</a>     {
<a name="313" href="#313">313</a>         <strong class="jxr_keyword">return</strong> getBundle( locale ).getString( <span class="jxr_string">"report.baseline.description"</span> );
<a name="314" href="#314">314</a>     }
<a name="315" href="#315">315</a> 
<a name="316" href="#316">316</a>     <strong class="jxr_keyword">public</strong> String getName( Locale locale )
<a name="317" href="#317">317</a>     {
<a name="318" href="#318">318</a>         <strong class="jxr_keyword">return</strong> getBundle( locale ).getString( <span class="jxr_string">"report.baseline.name"</span> );
<a name="319" href="#319">319</a>     }
<a name="320" href="#320">320</a> 
<a name="321" href="#321">321</a>     <strong class="jxr_keyword">private</strong> ResourceBundle getBundle( Locale locale )
<a name="322" href="#322">322</a>     {
<a name="323" href="#323">323</a>         <strong class="jxr_keyword">return</strong> ResourceBundle.getBundle( <span class="jxr_string">"baseline-report"</span>, locale, getClass().getClassLoader() );
<a name="324" href="#324">324</a>     }
<a name="325" href="#325">325</a> 
<a name="326" href="#326">326</a>     <strong class="jxr_keyword">public</strong> String getOutputName()
<a name="327" href="#327">327</a>     {
<a name="328" href="#328">328</a>         <strong class="jxr_keyword">return</strong> <span class="jxr_string">"baseline-report"</span>;
<a name="329" href="#329">329</a>     }
<a name="330" href="#330">330</a> 
<a name="331" href="#331">331</a>     <strong class="jxr_keyword">public</strong> File getReportOutputDirectory()
<a name="332" href="#332">332</a>     {
<a name="333" href="#333">333</a>         <strong class="jxr_keyword">return</strong> outputDirectory;
<a name="334" href="#334">334</a>     }
<a name="335" href="#335">335</a> 
<a name="336" href="#336">336</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> isExternalReport()
<a name="337" href="#337">337</a>     {
<a name="338" href="#338">338</a>         <strong class="jxr_keyword">return</strong> false;
<a name="339" href="#339">339</a>     }
<a name="340" href="#340">340</a> 
<a name="341" href="#341">341</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> setReportOutputDirectory( File outputDirectory )
<a name="342" href="#342">342</a>     {
<a name="343" href="#343">343</a>         <strong class="jxr_keyword">this</strong>.outputDirectory = outputDirectory;
<a name="344" href="#344">344</a>     }
<a name="345" href="#345">345</a> 
<a name="346" href="#346">346</a> }
</pre>
<hr/><div id="footer">This page was automatically generated by <a href="http://maven.apache.org/">Maven</a></div></body>
</html>

